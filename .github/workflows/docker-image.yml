name: Publish Docker image and Deploy
on:
  push:
    branches: ["main", "dev"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main", "dev"]

env:
  DOCKER_IMAGE: proxy302/${{ contains(github.event.repository.name, '_private') && github.event.repository.name | replace('_private', '') || github.event.repository.name }}
  NEXT_PUBLIC_DEFAULT_MODEL_NAME: gpt-4o-mini
  NEXT_PUBLIC_HIDE_BRAND: false
  NEXT_PUBLIC_LOG_LEVEL: info
  NEXT_PUBLIC_302_WEBSITE_URL_CHINA: https://302ai.cn
  NEXT_PUBLIC_302_WEBSITE_URL_GLOBAL: https://302.ai
  NEXT_PUBLIC_AUTH_PATH: /auth
  NEXT_PUBLIC_IS_CHINA: false
  NEXT_PUBLIC_DEFAULT_LOCALE: en
  NEXT_PUBLIC_AI_302_API_UPLOAD_URL: https://dash-api.302.ai/gpt/api/upload/gpt/image

jobs:
  build-and-deploy:
    environment: ${{ github.ref_name == 'main' && 'Production' || 'Development' }}
    name: Build, Push and Deploy
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=dev,enable=${{ github.ref == format('refs/heads/{0}', 'dev') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
            type=gha
          cache-to: |
            type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max
            type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            NEXT_PUBLIC_API_URL=${{ secrets.API_URL }}
            NEXT_PUBLIC_AUTH_API_URL=${{ secrets.AUTH_API_URL  }}
            NEXT_PUBLIC_DEFAULT_MODEL_NAME=${{ env.NEXT_PUBLIC_DEFAULT_MODEL_NAME }}
            NEXT_PUBLIC_HIDE_BRAND=${{ env.NEXT_PUBLIC_HIDE_BRAND }}
            NEXT_PUBLIC_LOG_LEVEL=${{ env.NEXT_PUBLIC_LOG_LEVEL }}
            NEXT_PUBLIC_302_WEBSITE_URL_CHINA=${{ env.NEXT_PUBLIC_302_WEBSITE_URL_CHINA }}
            NEXT_PUBLIC_302_WEBSITE_URL_GLOBAL=${{ env.NEXT_PUBLIC_302_WEBSITE_URL_GLOBAL }}
            NEXT_PUBLIC_AUTH_PATH=${{ env.NEXT_PUBLIC_AUTH_PATH }}
            NEXT_PUBLIC_IS_CHINA=${{ env.NEXT_PUBLIC_IS_CHINA }}
            NEXT_PUBLIC_DEFAULT_LOCALE=${{ env.NEXT_PUBLIC_DEFAULT_LOCALE }}
            NEXT_PUBLIC_AI_302_API_UPLOAD_URL=${{ env.NEXT_PUBLIC_AI_302_API_UPLOAD_URL }}

      - name: Set deployment name
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '/_ ' '-' | tr '[:upper:]' '[:lower:]')
          echo "K8S_DEPLOYMENT_NAME=application-${REPO_NAME}" >> $GITHUB_ENV

      - name: Setup kubectl for DEV
        if: github.ref_name == 'dev'
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DEPLOY }}" > $HOME/.kube/config

      - name: Deploy to DEV environment
        if: github.ref_name == 'dev'
        run: |
          kubectl rollout restart deployment/${{ env.K8S_DEPLOYMENT_NAME }}
          kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT_NAME }}
          echo "Deployed to DEV environment"

      - name: Setup kubectl for PROD
        if: github.ref_name == 'main'
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_PROD }}" > $HOME/.kube/config

      - name: Deploy to PROD environment
        if: github.ref_name == 'main'
        run: |
          kubectl rollout restart deployment/${{ env.K8S_DEPLOYMENT_NAME }}
          kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT_NAME }}
          echo "Deployed to PROD environment"
